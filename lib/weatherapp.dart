import 'dart:convert';
import 'dart:ui';

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter/widgets.dart';
import 'package:http/http.dart' as hello;
import 'package:get/get.dart';
import 'package:intl/intl.dart';

import 'apikey.dart';

class weatherapp extends StatefulWidget {
  const weatherapp({super.key});

  @override
  State<weatherapp> createState() => _weatherappState();
}

class _weatherappState extends State<weatherapp> {
  TextEditingController _textEditingController = TextEditingController();
  String temperature = "";
  var selectedDistrict = 'coimbatore'.obs;
  var data = {}.obs;

  Future<mapweater> temp() async {
    var res = await hello.get(Uri.parse("https://api.openweathermap.org/data/2.5/weather?q=madurai&appid=2668d09879277255af00abccfb23167d"));
    return mapweater.fromMap(jsonDecode(res.body));
  }



  Future<Autogenerated> getdata() async {
    var res = await hello.get(Uri.parse(
        "https://api.openweathermap.org/data/2.5/weather?&appid={2668d09879277255af00abccfb23167d}"));
    return Autogenerated.fromJson(jsonDecode(res.body));

  }

  @override
  Widget build(BuildContext context ) {
    return Scaffold(

      //backgroundColor: Colors.blue.shade200,
      body: Column(
        children: [
         FutureBuilder(
             future: temp(),
             builder: (BuildContext context,snashot){
               if(snashot.hasData){
                 return Container(
                     height: MediaQuery.of(context).size.height,
                     width: MediaQuery.of(context).size.width,
                     decoration: BoxDecoration(
                         gradient: LinearGradient(
                             colors: [
                               CupertinoColors.activeBlue,
                               Colors.indigoAccent.shade100
                             ])
                     ),
                     child: Column(
                       children: [
                         // ClipRect(
                         //   child: BackdropFilter(
                         //     // child: Image.asset("assets/cloudy.jpg"),
                         //     filter: ImageFilter.blur(sigmaX: 300.0, sigmaY: 600,),
                         //   ),
                         // ),
                         Padding(
                           padding: const EdgeInsets.only(left: 20, right: 20),
                           child: TextFormField(
                             controller: _textEditingController,
                             decoration: InputDecoration(
                                 suffixIcon: TextButton(onPressed: () { },
                                   child: Text("ok",style: TextStyle(color: Colors.black),),),
                                 enabledBorder: OutlineInputBorder(
                                     borderSide: BorderSide(color: Colors.white)),
                                 border: OutlineInputBorder()),
                           ),
                         ),
                         Padding(
                           padding: const EdgeInsets.only(top: 29),
                           child: Container(
                             height: 200,
                             width: 200,
                             decoration: BoxDecoration(
                               borderRadius: BorderRadius.circular(20),
                               color: CupertinoColors.white,
                               image: DecorationImage(
                                 image: NetworkImage("http://openweathermap.org/img/w/${snashot.data!.icon}.png"),
                                 fit: BoxFit.fill
                               )
                             ),
                           ),
                         ),
                         SizedBox(
                           height: 20,
                         ),
                         Text(
                           " ${snashot.data!.temp.toString()}",
                           style: TextStyle(fontSize: 60,color: Colors.white),
                         ),
                         Text(
                           "${snashot.data!.country}",
                           style: TextStyle(
                               color: Colors.white,
                               fontSize: 30,
                               fontWeight: FontWeight.bold),
                         ),
                         SizedBox(
                           height: 30,
                         ),

                         RichText(text:
                         TextSpan(
                             children: [
                               TextSpan(text: "maxtemp:",style: TextStyle(fontSize: 35,fontWeight:FontWeight.bold)),
                               TextSpan(text: " ${snashot.data!.tempMin.toString()}üå°Ô∏è",
                                   style: TextStyle(color: Colors.red,fontSize: 25))
                             ]

                         )),

                         SizedBox(
                           width: 10,
                         ),
                         RichText(text:
                         TextSpan(
                             children: [
                               TextSpan(text: "mintemp:",style: TextStyle(fontSize: 35,fontWeight: FontWeight.bold)),
                               TextSpan(text: " ${snashot.data!.tempMax.toString()}",style: TextStyle(color: Colors.red,fontSize: 25)),
                               TextSpan(text: "üå°Ô∏è",style: TextStyle(color: Colors.greenAccent,fontSize: 25))

                             ]

                         )),
                         SizedBox(
                           height: 30,
                         ),
                         Padding(
                           padding: const EdgeInsets.only(left: 100),
                           child: Row(
                             children: [
                               Icon(Icons.water_drop_outlined),

                               Text(
                                 ":${snashot.data!.humidity}",
                                 style: TextStyle(fontSize: 25,color: Colors.white),
                               ),
                               SizedBox(
                                 width: 20,
                               ),
                               // IconButton(
                               //     onPressed: () {}, icon: Icon(Icons.sunny_snowing,color: Colors.amberAccent,)),
                               Row(mainAxisAlignment: MainAxisAlignment.center,
                                 children: [
                                   Icon(CupertinoIcons.wind),
                                   Text(
                                     ":${snashot.data!.pressure}",
                                     style: TextStyle(fontSize: 25,color: Colors.white),
                                   ),
                                 ],
                               ),


                             ],
                           ),
                         ),
                         SizedBox(width: 70,),
                         // Row(
                         //   children: [
                         //     Icon(Icons.cloud_circle),
                         //     Text(
                         //       ":${snashot.data!.description}",
                         //       style: TextStyle(fontSize: 25,color: Colors.white),
                         //     ),
                         //   ],
                         // ),
                         Text(
                           "üåÖ:${snashot.data!.sunrise}am",
                           style: TextStyle(fontSize: 25,color: Colors.white),
                         ),
                         Text(
                           "üåá:${snashot.data!.sunset}pm",
                           style: TextStyle(fontSize: 25,color: Colors.white),
                         ),
                         Text(
                           "üçÉ:${snashot.data!.speed}",
                           style: TextStyle(fontSize: 25,color: Colors.white),
                         ),
                       ],
                     ));
               }else if(snashot.hasError){
                 return Text("error");
               }
               return Center(
                 child: CircularProgressIndicator(),
               );
             }
         ),

        ],
      ),
    );
  }
}
